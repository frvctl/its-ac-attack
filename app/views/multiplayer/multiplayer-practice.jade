script(src="/socket.io/socket.io.js")
script
  var socket = io.connect();

  socket.on('question', function(data){
     var q = data[0];
     var words = q.question.split(" ");
     var pointer = 0;
     $("#year").text(q.year)
     $("#difficulty").text(q.difficulty)
     $("#category").text(q.category)
     $("#tournament").text(q.tournament)
     $("#answer").text(q.answer)
     function nextWord(){
       $("#question").text(words.slice(0, ++pointer).join(" "))
       setTimeout(nextWord, 1000)
     };
     nextWord();
  });

  socket.on('users', function (userNames) {
    $('#currentlyOnline').empty().append($('<span>Online: </span>'));
    for (var i in userNames) {
      $('#users').append($('<b>').text(userNames[i]));
    }
  });


  socket.on('answerResult', function(data){
    $(document).ready(function(){
      if(data == true){
        $('#answer').text('Your answer is correct!');
      }else{
        $('#answer').text('Your answer is incorrect =(')
      }
    });
  });

  $(document).ready(function(){
    $('#answerForm').submit(function(event){
      event.preventDefault();
      socket.emit('answer', $('#answerInput').val());
      $('#answerDiv').addClass("hide");
      $('#nextQuestionButton').removeClass("hide");
    });
  });

  $(document).ready(function(){
    $("#buzzer").click(function(event){
      $("#answerDiv").removeClass("hide");
      $("#buzzer").addClass("hide");
    });
  });

  socket.on('connect', function () {
    $('#chat').addClass('connected');
  });

  socket.on('announcement', function (msg) {
    $('#lines').append($('<p>').append($('<em>').text(msg)));
  });

  socket.on('nicknames', function (nicknames) {
    $('#nicknames').empty().append($('<span>Online: </span>'));
    for (var i in nicknames) {
      $('#nicknames').append($('<b>').text(nicknames[i]));
    }
  });

  socket.on('user message', message);
  socket.on('reconnect', function () {
    $('#lines').remove();
    message('System', 'Reconnected to the server');
  });

  socket.on('reconnecting', function () {
    message('System', 'Attempting to re-connect to the server');
  });

  socket.on('error', function (e) {
    message('System', e ? e : 'A unknown error occurred');
  });

  function message (from, msg) {
    $('#lines').append($('<p>').append($('<b>').text(from), msg));
  }

  // dom manipulation
  $(function () {
    $('#set-nickname').submit(function (ev) {
      socket.emit('nickname', $('#nick').val(), function (set) {
        if (!set) {
          clear();
          return $('#chat').addClass('nickname-set');
        }
        $('#nickname-err').removeClass('hide');
      });
      return false;
    });

    $('#send-message').submit(function () {
      message('me', $('#message').val());
      socket.emit('user message', $('#message').val());
      clear();
      $('#lines').get(0).scrollTop = 10000000;
      return false;
    });

    function clear () {
      $('#message').val('').focus();
    };
  });

body
  #chat
    #nickname
      form.wrap#set-nickname
        p Please type in your nickname and press enter.
        input#nick
        p.hide#nickname-err Nickname already in use
    #connecting
      .wrap Connecting to socket.io server
    #messages
      #nicknames
      #lines
    form#send-message
      input#message
      button.btn.btn-primary.btn-large Send


if(loggedIn)
  div#messageBox
    li.center 
      span#currentlyOnline
      span#users

  p
    != 'Hello '
    != userName
  div.row-fluid
    ul
      form.well
        li(type="none")
          != 'Difficulty: '
          span#difficulty
          != ' | '
          != 'Year: '
          span#year
          != ' | '
          != 'Category: '
          span#category
          != ' | '
          != 'Tournament: '
          span#tournament
          hr    
          span#question
      span#answer

  div#answerDiv.hide
    form(name="answerForm", action="", method="get")#answerForm.center.well.search-form
      div
        input(type='text', autocomplete="off", name='answerInput', placeholder='Answer')#answerInput.input-xlarge.search-query
      button(type='submit')#answerButton.btn.btn-primary Answer
  
  div#buttons.center
    button#buzzer.btn.btn-primary.btn-large Buzzer!
    button#nextQuestionButton.btn.btn-primary.hide Next Question!

if(!loggedIn)
  p Log in you idiot